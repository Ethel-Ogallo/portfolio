[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ethel Ogallo",
    "section": "",
    "text": "Hi! I’m Ethel, a geospatial and data science enthusiast with a background in Geoinformatics and an interest in leveraging AI in Earth Observation to solve real-world challenges. I am currently undertaking the Copernicus Master in Digital Earth (CDE), specializing in GeoDataScience, at both the University of Salzburg and University of South Brittany in Vannes . This master’s degree is funded by the Erasmus Mundus Joint Masters Programme.\nIn this portfolio, you will find a collection of my academic projects and other relevant work and research that showcase my journey and growth in Earth Observation and GeoDataScience."
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "CV",
    "section": "",
    "text": "Education\n\n\n\n\nParis-Lodron Universität Salzburg(Oct 2024 - Present)\nCopernicus Master in Digital Earth\n\n\nThe Technical University of Kenya(2019)\nBachelor of Applied Science in Geoinformatics\n\n\n\n\n\nProfessional Experience\n\n\nCEMA-Africa\nData Science Research Assistant (Feb 2024 - Sept 2024)\n\nEstimated catchment areas and travel time to health facilities and the services offered, providing insights to support better health service delivery, utilizing statistical and spatial modeling techniques in R.\nDeveloped a comprehensive dashboard visualizing health facility accessibility in Kenya and the various services they provide Link\n\nData Science Intern (Aug 2023- Jan 2024)\n\nLeveraged statistical and spatial models to examine cholera outbreak patterns over time and space, focusing on socio-demographic and environmental factors.\nMapped cholera hotspots at the ward level, offering actionable insights for targeted interventions and improved disease control strategies.\n\n\n\nCentunion East Africa\nEnvironmental Engineer (Jun 2021 - Dec 2022)\n\nDeveloped, implemented and maintained a robust environmental management system (EMS), conducting 4 internal audits to ensure compliance with ISO standards and local regulations.\nProactively monitored operations and implemented corrective actions, minimizing risks and demonstrating a strong commitment to environmental sustainability.\n\nJunior Draughtsman (Nov 2020 - May 2021)\n\nAssisted in creating technical and shop drawings for road construction projects, ensuring precision in specifications and measurements.\n\n\n\nOakar\nGIS Research Assistant (Mar 2020 - Aug 2020)\n\nCollected and managed spatial and non-spatial data for a farmer registration project in Kiambu County, using mobile client configuration tools."
  },
  {
    "objectID": "projects/project2/example.html",
    "href": "projects/project2/example.html",
    "title": "project2",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "more.html",
    "href": "more.html",
    "title": "Experience beyond the classroom",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Skills",
    "section": "",
    "text": "Software and Applications\n\n\n\n\n\n\n\n\n\nQGIS\n\n\n\nArcGIS Pro\n\n\n\nPostgresql\n\n\n\n\n\nProgramming Languages\n\n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\nSQL\n\n\n\n\n\nPython"
  },
  {
    "objectID": "projects/project1/example.html",
    "href": "projects/project1/example.html",
    "title": "project1",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Big Data\n\n\nExploring cloud-based platforms and big data analytics for EO, including temporal analysis in GEE, soil moisture monitoring, and seasonal water mapping using Sen2Cube.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImage segmentation and Classification\n\n\nApplying supervised and knowledge-based classification using eCognition to distinguish land cover types through object-based image analysis.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpatial Data Infrastructure (SDI) for Gender Employment Trends in Austria\n\n\nDesigning an SDI framework to integrate and visualize gender employment data, enabling spatial analysis for policy insights.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesign and Implementation of a Spatial Database\n\n\nDeveloping a structured spatial database for a fictional WebGIS application, optimizing geospatial data storage, querying, and interoperability using PostGIS.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBIA for estimating building density\n\n\nUtilizing OBIA to assess building density patterns, presented in a scientific poster format for spatial analysis applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRADAR - Remote sensing\n\n\nAnalyzing Synthetic Aperture Radar (SAR) data to extract valuable geospatial insights, focusing on radar-based Earth observation techniques.\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/Spatial thinking/Change_detection_OBIA.html",
    "href": "projects/Spatial thinking/Change_detection_OBIA.html",
    "title": "OBIA for estimating building density",
    "section": "",
    "text": "Scientific Poster"
  },
  {
    "objectID": "projects/SDI/DEFGA.html",
    "href": "projects/SDI/DEFGA.html",
    "title": "Spatial Data Infrastructure (SDI) for Gender Employment Trends in Austria",
    "section": "",
    "text": "Development of Employment Figures by Gender In Autsria\nExplore Austria’s gender employment trends through this interactive dashboard, powered by a robust Spatial Data Infrastructure (SDI). This platform integrates spatial and temporal data, uncovering employment disparities across regions and over time. Read on to learn how this SDI was designed.\n\n\n\nIntroduction\nIn today’s data-driven world, effective decision-making relies heavily on the ability to manage, analyze, and visualize complex datasets. A well-designed Spatial Data Infrastructure (SDI) enables this by integrating geospatial data across multiple sources, fostering collaboration, and supporting informed decisions.\nThis project focuses on developing an SDI tailored to Austria’s gender employment figures over a period of time. By leveraging open-source tools and technologies, the project highlights how SDIs can be applied to address pressing societal challenges, such as gender disparities in employment, while delivering actionable insights through interactive dashboards\n\n\nObjective\nThe project’s primary objective was to design a comprehensive SDI that could:\n\nCollect and integrate employment data from multiple sources, including Statistik Austria and Eurostat.\n\n\n\nDevelop web services to share geospatial data and visualizations with diverse stakeholders.\nEnable spatial analysis to identify employment trends and disparities across Austria’s urban and rural regions.\n\n\n\nSDI Architecture\nThe architecture of this SDI was designed with flexibility, accessibility, and functionality in mind, leveraging open-source tools to ensure scalability and sustainability.\n\nData Integration\n\n\nEmployment data from Statistik Austria and administrative datasets from Eurostat were standardized and stored in a PostGIS-enabled PostgreSQL database.\nData , code and project management documents can be found here: Gitlab\n\n\nOpen Geoservices\n\n\nThe project prioritized interoperability by publishing OGC-compliant web services through GeoServer and ArcGIS Server.\n\nWMS (Web Map Services) were used to provide real-time access to geospatial data.\nMetadata was managed and published using GeoNetwork, ensuring discoverability and standardization.\n\n\n\nVisualization Tools\n\n\nThe interactive dashboard was developed using Shiny apps an R-based framework for building data apps.\nIt integrates spatial and temporal datasets, providing users with:\n\nCustomizable maps highlighting gender imbalances and urban-rural disparities.\nInteractive charts and filters to explore trends by gender, region, and year.\n\n\n\nScalable Architecture\n\n\nBy using open-source software, the SDI ensures adaptability for future applications, making it a sustainable solution for ongoing spatial data challenges.\n\n\n\n\nResults\nThe interactive dashboard serves as the tangible outcome of this SDI project, showcasing its capabilities in visualizing and analyzing gender employment trends across Austria over a 10-year period.\n\nUsers can explore gender-specific disparities in employment across regions.\nThe dashboard provides dynamic visualizations that highlight temporal trends and urban-rural contrasts.\n\nExperience the Dashboard\n\nExplore the dashboard in action: Click to dashboard"
  },
  {
    "objectID": "projects/Advanced Remote Sensing/example.html",
    "href": "projects/Advanced Remote Sensing/example.html",
    "title": "Advanced Remote Sensing",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "projects/Spatial Database/example.html",
    "href": "projects/Spatial Database/example.html",
    "title": "spatial databases",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "resume2.html",
    "href": "resume2.html",
    "title": "Curriculum Vitae",
    "section": "",
    "text": "Education\n\n\nParis-Lodron Universität Salzburg (Oct 2024 - Present)\nCopernicus Master in Digital Earth\n\n\nThe Technical University of Kenya (2019)\nBachelor of Applied Science in Geoinformatics\n\n\nProfessional Experience\n\n\n\nCEMA-Africa\n\n\nData Science Research Assistant (Feb 2024 - Sept 2024)\n\nEstimated catchment areas and travel time to health facilities, providing insights to support better health service delivery using statistical and spatial modeling techniques in R.\nDeveloped a comprehensive dashboard visualizing health facility accessibility in Kenya.\nView Dashboard\n\n\n\nData Science Intern (Aug 2023 - Jan 2024)\n\nLeveraged statistical and spatial models to examine cholera outbreak patterns over time and space, focusing on socio-demographic and environmental factors.\nMapped cholera hotspots at the ward level, offering actionable insights for targeted interventions and improved disease control strategies.\n\n\n\n\n\nCentunion East Africa\n\n\nEnvironmental Engineer (Jun 2021 - Dec 2022)\n\nDeveloped, implemented, and maintained a robust environmental management system (EMS), conducting 4 internal audits to ensure compliance with ISO standards and local regulations.\nProactively monitored operations and implemented corrective actions, minimizing risks and demonstrating a strong commitment to environmental sustainability.\n\n\n\nJunior Draughtsman (Nov 2020 - May 2021)\n\nAssisted in creating technical and shop drawings for road construction projects, ensuring precision in specifications and measurements.\n\n\n\n\n\nOakar\n\n\nGIS Research Assistant (Mar 2020 - Aug 2020)\n\nCollected and managed spatial and non-spatial data for a farmer registration project in Kiambu County, using mobile client configuration tools."
  },
  {
    "objectID": "resume2.html#education",
    "href": "resume2.html#education",
    "title": "Curriculum Vitae",
    "section": "",
    "text": "Copernicus Master in Digital Earth\n\n\n\nBachelor of Applied Science in Geoinformatics"
  },
  {
    "objectID": "resume2.html#professional-experience",
    "href": "resume2.html#professional-experience",
    "title": "Curriculum Vitae",
    "section": "Professional Experience",
    "text": "Professional Experience\n\nCEMA-Africa\n\nData Science Research Assistant (Feb 2024 - Sept 2024)\n\nEstimated catchment areas and travel time to health facilities using R.\nDeveloped a dashboard visualizing health facility accessibility in Kenya. Link\n\n\n\nData Science Intern (Aug 2023 - Jan 2024)\n\nAssisted in analyzing datasets for health services in Kenya.\nMapped cholera hotspots at the ward level, offering actionable insights for targeted interventions and improved disease control strategies\n\n\n\n\nCentunion East Africa\n\nEnvironmental Engineer (Jun 2021 - Dec 2022)\n\nDeveloped, implemented and maintained a robust environmental management system (EMS), conducting 4 internal audits to ensure compliance with ISO standards and local regulations.\nProactively monitored operations and implemented corrective actions, minimizing risks and demonstrating a strong commitment to environmental sustainability.\n\n\n\nJunior Draughtsman (Nov 2020 - May 2021)\n\nAssisted in creating technical and shop drawings for road construction projects, ensuring precision in specifications and measurements.s\n\n\n\n\nOakar Services Ltd.\n\nGIS Research Assistant (Mar 2020 - Aug 2020)\n\nCollected and managed spatial and non-spatial data for a farmer registration project in Kiambu County, using mobile client configuration tools."
  },
  {
    "objectID": "resume2.html#cema-africa",
    "href": "resume2.html#cema-africa",
    "title": "Curriculum Vitae",
    "section": "CEMA-Africa",
    "text": "CEMA-Africa\n\nData Science Research Assistant (Feb 2024 - Sept 2024)\n\nEstimated catchment areas and travel time to health facilities, providing insights to support better health service delivery using statistical and spatial modeling techniques in R.\nDeveloped a comprehensive dashboard visualizing health facility accessibility in Kenya.\nView Dashboard\n\n\n\nData Science Intern (Aug 2023 - Jan 2024)\n\nLeveraged statistical and spatial models to examine cholera outbreak patterns over time and space, focusing on socio-demographic and environmental factors.\nMapped cholera hotspots at the ward level, offering actionable insights for targeted interventions and improved disease control strategies."
  },
  {
    "objectID": "resume2.html#centunion-east-africa",
    "href": "resume2.html#centunion-east-africa",
    "title": "Curriculum Vitae",
    "section": "Centunion East Africa",
    "text": "Centunion East Africa\n\nEnvironmental Engineer (Jun 2021 - Dec 2022)\n\nDeveloped, implemented, and maintained a robust environmental management system (EMS), conducting 4 internal audits to ensure compliance with ISO standards and local regulations.\nProactively monitored operations and implemented corrective actions, minimizing risks and demonstrating a strong commitment to environmental sustainability.\n\n\n\nJunior Draughtsman (Nov 2020 - May 2021)\n\nAssisted in creating technical and shop drawings for road construction projects, ensuring precision in specifications and measurements."
  },
  {
    "objectID": "resume2.html#oakar",
    "href": "resume2.html#oakar",
    "title": "Curriculum Vitae",
    "section": "Oakar",
    "text": "Oakar\n\nGIS Research Assistant (Mar 2020 - Aug 2020)\n\nCollected and managed spatial and non-spatial data for a farmer registration project in Kiambu County, using mobile client configuration tools."
  },
  {
    "objectID": "projects/Digital earth/projects.html",
    "href": "projects/Digital earth/projects.html",
    "title": "Digital Earth",
    "section": "",
    "text": "OBIA for estimating building density\n\n\n\nEarth Observation\n\n\nOBIA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBIA for estimating building density\n\n\n\nEarth Observation\n\n\nOBIA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOBIA for estimating building density\n\n\n\nEarth Observation\n\n\nOBIA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html",
    "href": "projects/Digital earth/DE_projects.html",
    "title": "Big Data",
    "section": "",
    "text": "Introduction\nMau Forest, one of Kenya’s most vital water towers, has been experiencing significant deforestation due to human activities such as logging and agricultural expansion over the past decade or so. Monitoring these changes is essential for conservation efforts, and satellite-based remote sensing provides a powerful tool for such analysis. This project utilizes Google Earth Engine (GEE) to assess vegetation changes in Mau Forest between 2018 and 2024.\nAnalysis\nThe analysis was conducted using Sentinel-2 imagery in Google Earth Engine (GEE), where the applied the NDVI to detect vegetation change over time.\n\n// First define an area of interest\nvar lat = -0.55; \nvar lng = 35.65;\nvar point = ee.Geometry.Point(lng, lat); // Corrected: swapped lat and lng\nvar aoi = point.buffer(1000); // Create an area (1km buffer around point)\nMap.setCenter(lng, lat, 10); // Center the map on this location, zoom level 10\n\n// Download the Sentinel-2 imagery collection\nvar s2 = ee.ImageCollection('COPERNICUS/S2');\n\n// Filter the collection by location, date boundaries, and cloud cover percentage for the 'before' image\nvar s2_filtered = s2.filterBounds(aoi)\n    .filterDate('2018-01-01','2019-12-31')\n    .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'less_than', 30);\n\n// This will sort the images by lowest cloud cover first.\nvar sorted = s2_filtered.sort('CLOUDY_PIXEL_PERCENTAGE', true);\n\n// Pick the first image from the sorted and filtered collection\nvar image = ee.Image(sorted.first());\n\n// Calculate NDVI for the \"before\" image\nvar NDVI = image.normalizedDifference(['B8', 'B4']); // NIR: B8, Red: B4\n\n// Define the visualisation parameters to display the image \nvar vizParams = {\n  palette: ['#FF0000', '#FFFF00', '#007F00'], // used a color pallette to highlight the vegetation\n  min: 0,\n  max: 1\n};\n\n// Add the image to the default Map.\nMap.addLayer(NDVI, vizParams, \"NDVI before\"); \n\n// Make another map for the 'after' image.\nvar linkedMap = ui.Map();\n\n// Filter the collection by location, date boundaries, and cloud cover percentage for the 'after' image\nvar s2_filtered = s2.filterBounds(aoi)\n    .filterDate('2023-01-01','2024-11-30')\n    .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'less_than', 30);\n\n// This will sort the images by lowest cloud cover first.\nvar sorted = s2_filtered.sort('CLOUDY_PIXEL_PERCENTAGE', true);\n\n// Pick the first image from the sorted and filtered collection\nvar image = ee.Image(sorted.first());\n\n// Calculate NDVI for the \"after\" image\nvar NDVI = image.normalizedDifference(['B8', 'B4']); // NIR: B8, Red: B4\n\n// Add the NDVI layer for the \"after\" image to the linked map\nlinkedMap.addLayer(NDVI, vizParams, \"NDVI after\"); \n\n// Link the default Map to the other map.\nvar linker = ui.Map.Linker([ui.root.widgets().get(0), linkedMap]);\n\n// Create a SplitPanel which holds the linked maps side-by-side.\nvar splitPanel = ui.SplitPanel({\n  firstPanel: linker.get(0),\n  secondPanel: linker.get(1),\n  orientation: 'horizontal',\n  wipe: true,\n  style: {stretch: 'both'}\n});\n\n// Set the SplitPanel as the only thing in root.\nui.root.widgets().reset([splitPanel]);\n\nVisualization Results\nThe NDVI maps show the changes in vegetation over time:\n- Green areas → high NDVI for dense or healthy vegetation.\n- Yellow areas → Moderate dense vegetation.\n- Red areas → NDVI for barren land or urban areas or unhealthy vegetation."
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html#project-1-temporal-analysis-using-google-earth-engine",
    "href": "projects/Digital earth/DE_projects.html#project-1-temporal-analysis-using-google-earth-engine",
    "title": "Digital Earth",
    "section": "",
    "text": "Introduction\nMau Forest, one of Kenya’s most vital water towers, has been experiencing significant deforestation due to human activities such as logging and agricultural expansion over the past decade or so. Monitoring these changes is essential for conservation efforts, and satellite-based remote sensing provides a powerful tool for such analysis. This project utilizes Google Earth Engine (GEE) to assess vegetation changes in Mau Forest between 2018 and 2024.\nMethodology\nThe analysis was conducted using Sentinel-2 imagery in Google Earth Engine (GEE), where the applied the NDVI to detect vegetation loss over time.\n\n// First define an area of interest\nvar lat = -0.55; \nvar lng = 35.65;\nvar point = ee.Geometry.Point(lng, lat); // Corrected: swapped lat and lng\nvar aoi = point.buffer(1000); // Create an area (1km buffer around point)\nMap.setCenter(lng, lat, 10); // Center the map on this location, zoom level 10\n\n// Download the Sentinel-2 imagery collection\nvar s2 = ee.ImageCollection('COPERNICUS/S2');\n\n// Filter the collection by location, date boundaries, and cloud cover percentage for the 'before' image\nvar s2_filtered = s2.filterBounds(aoi)\n    .filterDate('2018-01-01','2019-12-31')\n    .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'less_than', 30);\n\n// This will sort the images by lowest cloud cover first.\nvar sorted = s2_filtered.sort('CLOUDY_PIXEL_PERCENTAGE', true);\n\n// Pick the first image from the sorted and filtered collection\nvar image = ee.Image(sorted.first());\n\n// Calculate NDVI for the \"before\" image\nvar NDVI = image.normalizedDifference(['B8', 'B4']); // NIR: B8, Red: B4\n\n// Define the visualisation parameters to display the image \nvar vizParams = {\n  palette: ['#FF0000', '#FFFF00', '#007F00'], // used a color pallette to highlight the vegetation\n  min: 0,\n  max: 1\n};\n\n// Add the image to the default Map.\nMap.addLayer(NDVI, vizParams, \"NDVI before\"); \n\n// Make another map for the 'after' image.\nvar linkedMap = ui.Map();\n\n// Filter the collection by location, date boundaries, and cloud cover percentage for the 'after' image\nvar s2_filtered = s2.filterBounds(aoi)\n    .filterDate('2023-01-01','2024-11-30')\n    .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'less_than', 30);\n\n// This will sort the images by lowest cloud cover first.\nvar sorted = s2_filtered.sort('CLOUDY_PIXEL_PERCENTAGE', true);\n\n// Pick the first image from the sorted and filtered collection\nvar image = ee.Image(sorted.first());\n\n// Calculate NDVI for the \"after\" image\nvar NDVI = image.normalizedDifference(['B8', 'B4']); // NIR: B8, Red: B4\n\n// Add the NDVI layer for the \"after\" image to the linked map\nlinkedMap.addLayer(NDVI, vizParams, \"NDVI after\"); \n\n// Link the default Map to the other map.\nvar linker = ui.Map.Linker([ui.root.widgets().get(0), linkedMap]);\n\n// Create a SplitPanel which holds the linked maps side-by-side.\nvar splitPanel = ui.SplitPanel({\n  firstPanel: linker.get(0),\n  secondPanel: linker.get(1),\n  orientation: 'horizontal',\n  wipe: true,\n  style: {stretch: 'both'}\n});\n\n// Set the SplitPanel as the only thing in root.\nui.root.widgets().reset([splitPanel]);\n\nVisualization Results\nThe NDVI maps show the changes in vegetation over time:\n- Green areas → Healthy vegetation\n- Yellow areas → Moderate vegetation loss\n- Red areas → Deforested land"
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html#project-2-eo-browser",
    "href": "projects/Digital earth/DE_projects.html#project-2-eo-browser",
    "title": "Digital Earth",
    "section": "Project 2: EO Browser",
    "text": "Project 2: EO Browser"
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html#project-3-sen2cube",
    "href": "projects/Digital earth/DE_projects.html#project-3-sen2cube",
    "title": "Digital Earth",
    "section": "Project 3: Sen2Cube",
    "text": "Project 3: Sen2Cube"
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html#project-1-temporal-analysis-using-gee-mau-forest",
    "href": "projects/Digital earth/DE_projects.html#project-1-temporal-analysis-using-gee-mau-forest",
    "title": "Big Data",
    "section": "",
    "text": "Introduction\nMau Forest, one of Kenya’s most vital water towers, has been experiencing significant deforestation due to human activities such as logging and agricultural expansion over the past decade or so. Monitoring these changes is essential for conservation efforts, and satellite-based remote sensing provides a powerful tool for such analysis. This project utilizes Google Earth Engine (GEE) to assess vegetation changes in Mau Forest between 2018 and 2024.\nAnalysis\nThe analysis was conducted using Sentinel-2 imagery in Google Earth Engine (GEE), where the applied the NDVI to detect vegetation change over time.\n\n// First define an area of interest\nvar lat = -0.55; \nvar lng = 35.65;\nvar point = ee.Geometry.Point(lng, lat); // Corrected: swapped lat and lng\nvar aoi = point.buffer(1000); // Create an area (1km buffer around point)\nMap.setCenter(lng, lat, 10); // Center the map on this location, zoom level 10\n\n// Download the Sentinel-2 imagery collection\nvar s2 = ee.ImageCollection('COPERNICUS/S2');\n\n// Filter the collection by location, date boundaries, and cloud cover percentage for the 'before' image\nvar s2_filtered = s2.filterBounds(aoi)\n    .filterDate('2018-01-01','2019-12-31')\n    .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'less_than', 30);\n\n// This will sort the images by lowest cloud cover first.\nvar sorted = s2_filtered.sort('CLOUDY_PIXEL_PERCENTAGE', true);\n\n// Pick the first image from the sorted and filtered collection\nvar image = ee.Image(sorted.first());\n\n// Calculate NDVI for the \"before\" image\nvar NDVI = image.normalizedDifference(['B8', 'B4']); // NIR: B8, Red: B4\n\n// Define the visualisation parameters to display the image \nvar vizParams = {\n  palette: ['#FF0000', '#FFFF00', '#007F00'], // used a color pallette to highlight the vegetation\n  min: 0,\n  max: 1\n};\n\n// Add the image to the default Map.\nMap.addLayer(NDVI, vizParams, \"NDVI before\"); \n\n// Make another map for the 'after' image.\nvar linkedMap = ui.Map();\n\n// Filter the collection by location, date boundaries, and cloud cover percentage for the 'after' image\nvar s2_filtered = s2.filterBounds(aoi)\n    .filterDate('2023-01-01','2024-11-30')\n    .filterMetadata('CLOUDY_PIXEL_PERCENTAGE', 'less_than', 30);\n\n// This will sort the images by lowest cloud cover first.\nvar sorted = s2_filtered.sort('CLOUDY_PIXEL_PERCENTAGE', true);\n\n// Pick the first image from the sorted and filtered collection\nvar image = ee.Image(sorted.first());\n\n// Calculate NDVI for the \"after\" image\nvar NDVI = image.normalizedDifference(['B8', 'B4']); // NIR: B8, Red: B4\n\n// Add the NDVI layer for the \"after\" image to the linked map\nlinkedMap.addLayer(NDVI, vizParams, \"NDVI after\"); \n\n// Link the default Map to the other map.\nvar linker = ui.Map.Linker([ui.root.widgets().get(0), linkedMap]);\n\n// Create a SplitPanel which holds the linked maps side-by-side.\nvar splitPanel = ui.SplitPanel({\n  firstPanel: linker.get(0),\n  secondPanel: linker.get(1),\n  orientation: 'horizontal',\n  wipe: true,\n  style: {stretch: 'both'}\n});\n\n// Set the SplitPanel as the only thing in root.\nui.root.widgets().reset([splitPanel]);\n\nVisualization Results\nThe NDVI maps show the changes in vegetation over time:\n- Green areas → high NDVI for dense or healthy vegetation.\n- Yellow areas → Moderate dense vegetation.\n- Red areas → NDVI for barren land or urban areas or unhealthy vegetation."
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html#project-2-eo-browser-for-soil-moisture-monitoring",
    "href": "projects/Digital earth/DE_projects.html#project-2-eo-browser-for-soil-moisture-monitoring",
    "title": "Big Data",
    "section": "Project 2: EO Browser for Soil Moisture Monitoring",
    "text": "Project 2: EO Browser for Soil Moisture Monitoring\n\nIntroduction\nEO Browser is a user-friendly online tool developed by Sinergise that facilitates easy access to analysis-ready satellite data, including imagery from the Copernicus Sentinel missions. It allows users to visualize and analyze environmental conditions using Sentinel-2 Level-2A imagery, making Earth observation data accessible without requiring advanced technical expertise.\nIn this project, the Barren Soil Index -script developed by Monja Sebela- was applied to assess soil moisture across different regions. The Barren Soil Index leverages specific spectral bands from Sentinel-2 data to distinguish between various land cover types, such as dry soil, vegetation, and water bodies.\nAnalysis\n\n//VERSION=3 (auto-converted from 1)\n\n//Author: Monja Sebela\n\nfunction evaluatePixel(s) {\n    let val = 2.5 * ((s.B11 + s.B04)-(s.B08 + s.B02))/((s.B11 + s.B04)+(s.B08 + s.B02));\n    return [2.5* val, s.B08, s.B11];\n}\nfunction setup() {\n  return {\n    input: [{\n      bands: [\n          \"B02\",\n          \"B04\",\n          \"B08\",\n          \"B11\",\n          \"B12\"\n      ]\n    }],\n    output: { bands: 3 }\n  }\n}\n\nResults\nThe application of the Barren Soil Index was evaluated across multiple regions to assess its performance in differentiating soil moisture levels and land cover types.\n\nSalzburg, Austria (November 2024)\nIn Salzburg, the Barren Soil Index effectively highlighted the varying land cover types. The Salzach River was prominently displayed in black, indicating water bodies. Vegetation appeared in green, and dry soil was distinctly represented in red. The results provide a clear delineation of soil moisture variations, with the index offering valuable insights into the region’s environmental conditions.\n\nKisumu, Kenya (October 2024)\nFor Kisumu, located near Lake Victoria, the analysis revealed dry land in red, vegetation in green, and water in black. Cloud cover was indicated in blue. A noteworthy observation was that urban areas, typically associated with reflective surfaces such as concrete and asphalt, also appeared red. This similarity in spectral reflectance to dry soil suggests the utility of the Barren Soil Index in urban contexts.\n\nBarbados (November 2024)\nIn Barbados, the index highlighted barren soil in red, vegetation in green, water in black, and cloud cover in a bluish-green hue. An interesting feature of the analysis was the appearance of a red boundary over the ocean. This could potentially be attributed to underlying dry soil on nearby islands or the influence of sensor angle, providing an additional layer of insight into the interaction between atmospheric and land features in coastal areas.\n\nConclusion\nThis analysis demonstrates the practical application of EO Browser , with the Barren Soil Index for monitoring soil moisture variations, across diverse geographical regions. The results underscore the efficacy of satellite-based remote sensing tools in environmental monitoring, particularly in the context of soil moisture and vegetation health assessment.\nBy utilizing Sentinel-2 imagery and advanced spectral analysis, this study illustrates the growing importance of remote sensing techniques in sustainable land management and climate monitoring. The ability to monitor land surface conditions on a global scale provides invaluable support for decision-making in agriculture, urban planning, and disaster management."
  },
  {
    "objectID": "projects/Digital earth/DE_projects.html#project-3-leveraging-sen2cube-for-seasonal-water-monitoring",
    "href": "projects/Digital earth/DE_projects.html#project-3-leveraging-sen2cube-for-seasonal-water-monitoring",
    "title": "Big Data",
    "section": "Project 3: Leveraging Sen2Cube for Seasonal Water Monitoring",
    "text": "Project 3: Leveraging Sen2Cube for Seasonal Water Monitoring\n\nWhat Are DataCubes?\nA DataCube is a multi-dimensional array of data, typically used for storing and analyzing large amounts of Earth Observation (EO) satellite imagery. DataCubes facilitate efficient access to spatiotemporal data by organizing satellite imagery into a structure that enables fast querying and analysis over time.\n\nSen2Cube\nSen2Cube, developed by the Department of Geoinformatics - Z_GIS at the University of Salzburg ,provides a unique and accessible approach to satellite data analysis. It allows users to generate actionable insights from satellite imagery with a higher semantic level providing users with an intuitive web-based platform to formulate queries and analyze satellite data.\nThe Simple Water Count Model\nFor this analysis, the Simple Water Count model was employed to assess the seasonality of water bodies across several Austrian lakes. This model was specifically chosen for its ability to detect water presence in satellite imagery over time, making it ideal for tracking fluctuations in water levels. The model was adapted not only to monitor water presence over time but also to visualize spatial variations of water bodies.\nBy applying this model, users can calculate water counts across different seasons and identify temporal trends of water bodies. The model produces two main outputs: a graphical representation of water presence over time and a spatial map showing the distribution of water across defined periods.\nResults: Seasonal Variations Across Austrian Lakes\nThe model was applied to four lakes in Austria: Neusiedler See, Ossiacher See, Plansee/Heiterwanger See, and Ottensteiner Stausee. The results, based on the analysis of Sentinel-2 imagery, provided valuable insights into the seasonal changes in water presence across these water bodies.\n1. Neusiedler See\n\nGraphical Results: The graph revealed that Neusiedler See showed significant seasonal variation in water presence. Higher water counts were observed during the early months (February-March) and later months (November), suggesting an increase in water levels. Conversely, July-September saw a reduction in water levels, possibly due to seasonal evaporation or cloud cover interference.\nSpatial Analysis: The spatial map showed a clear reduction in water coverage over time. Lighter hues indicated areas of water, while darker hues represented non-water areas.\n\n\n2. Ossiacher See\n\nGraphical Results: Ossiacher See displayed a consistent water presence over time, with a brief period showing a 0 water count, likely due to cloud cover obstructing satellite observations.\nSpatial Analysis: The spatial map showed minimal changes in water coverage, confirming the stability of water levels at Ossiacher See.\n\n\n3. Plansee/Heiterwanger See\n\nGraphical Results: The graph for Plansee/Heiterwanger See indicated a decrease in water presence between May and June, likely due to seasonal drying. November to March showed 0 water count values, which may have been caused by high cloud cover.\nSpatial Analysis: The spatial map corroborated the seasonal variation observed in the graph, with lighter values indicating water presence and darker shades showing reduced coverage.\n\n\n4. Ottensteiner Stausee\n\nGraphical Results: Ottensteiner Stausee exhibited seasonal fluctuations in water presence, particularly between March and July. The reduction in water levels during this period suggests it is a seasonal water body.\nSpatial Analysis: Similar to the other lakes, the spatial map displayed a reduction in water coverage, confirming the seasonal nature of Ottensteiner Stausee."
  },
  {
    "objectID": "projects/Spatial databases/spatial_databases.html",
    "href": "projects/Spatial databases/spatial_databases.html",
    "title": "Design and Implementation of a Spatial Database",
    "section": "",
    "text": "As part of a fictional project for Vudstork Entertainment Ltd, the task was to develop a WebGIS backend to support a mobile app for a city festival. The app provides festival visitors with real-time information and allows organizers to distribute notifications and streamline their workflows. My role involved leveraging my Geoinformatics expertise to design and implement a spatial database, which forms the core of the app’s functionality, integrating various methods and software techniques learned during the semester.\nRequirements\n\nServe as database backend to organise the booths, roller coasters, tents etc. (Positions, opening times) as well as other facilities (garbage bins, toilets etc)\nUser-specific, dynamic queries that return which events take place or facilities that are close to the current visitor’s position.\nUser-specific and dynamic queries about the festival (digital maps, lists of events etc\n\n\n\nThe ER diagram illustrates the main entities in the database design and their relationships.\n\nBelow is a summary of all tables\n\nFestival – Central entity that links all other tables, storing details about the festival’s name, location, and dates.\nEvent Zones – Defines areas within the festival (e.g., food, medical, event zones), linking to stages, booths, and utilities.\nStage – Stores details of festival stages, defining location, access level, and zone affiliation.\nEvent – Links artists to stages, recording performance time slots and locations.\nArtist – Stores artist details, linked to events and stages.\nBooth – Represents vendor booths, specifying type, location, and zone.\nVendor – Links vendors to booths.\nUtility – Stores details about facilities (e.g., toilets, medical points, garbage bins), linked to zones and festival areas.\nEmployees – Stores festival staff information, linking them to stages and assigned roles.\nVisitor – Tracks festival attendees, linking them to ticket types.\nVisitor Balance – Monitors a visitor’s remaining balance on their digital festival band.\nTicket – Stores ticket types (VIP, General Admission), defining visitor access levels.\nPurchase – Tracks visitor purchases at booths, recording transaction amounts.\n\n\n\n\nSpatial tables including utilities, booths, stages, zones and the festival grounds, were created using QGIS and the shapefiles were then imported into a PostGIS database.\n\nNon-spatial tables were defined in Postgres including events, artists, visitors employees , tickets etc .\n\n--- non spatial tables\n--- event table\nCREATE TABLE events (\n    event_id INTEGER PRIMARY KEY,\n    stage_id INTEGER ,\n    artist_id INTEGER ,\n    date DATE,\n    start_time TIME WITHOUT TIME ZONE,\n    end_time TIME WITHOUT TIME ZONE,\n    FOREIGN KEY (stage_id) REFERENCES stage(stage_id),\n    FOREIGN KEY (artist_id) REFERENCES artist(artist_id)\n);\n\n--- vendor table\nCREATE TABLE vendor (\n    vendor_id INTEGER PRIMARY KEY,\n    booth_id INTEGER,\n    licence CHARACTER VARYING,\n    FOREIGN KEY (booth_id) REFERENCES booth(booth_id)\n);\n\n--- artist table\nCREATE TABLE artist (\n    artist_id INTEGER PRIMARY KEY,\n    name CHARACTER VARYING,\n    genre CHARACTER VARYING\n);\n\n--- employees table\nCREATE TABLE employee (\n    employee_id INTEGER PRIMARY KEY,\n    stage_id INTEGER,\n    name CHARACTER VARYING,\n    job_type CHARACTER VARYING,\n    FOREIGN KEY (stage_id) REFERENCES stage(stage_id)\n);\n\n--- visitor table\nCREATE TABLE visitor (\n    visitor_id INTEGER PRIMARY KEY,\n    ticket_id INTEGER,\n    name CHARACTER VARYING,\n    FOREIGN KEY (ticket_id) REFERENCES ticket(ticket_id)\n);\n\n--- vistor balance table\nCREATE TABLE balance (\n    balance_id INTEGER PRIMARY KEY,\n    visitor_id INTEGER ,\n    balance FLOAT,\n    FOREIGN KEY (visitor_id) REFERENCES visitor(visitor_id)\n);\n\n--- ticket table\nCREATE TABLE ticket (\n    ticket_id INTEGER PRIMARY KEY,\n    type CHARACTER VARYING CHECK (type IN ('VIP','General'))\n);\n\n--- purchase table\nCREATE TABLE purchase (\n    purchase_id INTEGER PRIMARY KEY,\n    visitor_id INTEGER ,\n    booth_id INTEGER ,\n    amount FLOAT,\n    FOREIGN KEY (visitor_id) REFERENCES visitor(visitor_id),\n    FOREIGN KEY (booth_id) REFERENCES booth(booth_id)\n);\n\nThe database is normalized to Third Normal Form (3NF) to eliminate redundancy by having each table has a primary key that uniquely identifies records and all other attributes dependent on the full primary key and not the other non-primary keys.\nPseudo sample data was then inserted into the database for the corresponding tables.\n\n--- Adding sample data to the table\n--- 1. event table\nINSERT INTO events (event_id, stage_id, artist_id, date, start_time, end_time) \nVALUES\n    (1, 1, 1, '2025-07-09', '18:00', '19:30'), \n    (2, 1, 2, '2025-07-10', '20:00', '21:30'),  \n    (3, 2, 3, '2025-07-09', '17:00', '18:30'),  \n    (4, 2, 4, '2025-07-10', '19:00', '20:30'),  \n    (5, 3, 5, '2025-07-09', '18:00', '19:30'),  \n    (6, 3, 6, '2025-07-10', '20:00', '21:30'), \n    (7, 4, 7, '2025-07-09', '17:00', '18:30'),  \n    (8, 4, 8, '2025-07-10', '19:00', '20:30'),  \n    (9, 5, 9, '2025-07-09', '18:00', '19:30'),  \n    (10, 5, 10, '2025-07-10', '20:00', '21:30');\n\n--- 2. vendor table\nINSERT INTO vendor (vendor_id, booth_id, licence) \nVALUES \n    (10001, 1, 'FOOD-2025-001'),  \n    (10002, 2, 'MERCH-2025-002'),  \n    (10003, 10, 'GAMES-2025-003'),  \n    (10004, 6, 'FOOD-2025-004'),  \n    (10005, 3, 'MERCH-2025-005'),\n    (10006, 11, 'GAMES-2025-005'),\n    (10007, 7, 'FOOD-2025-005'),\n    (10008, 4, 'MERCH-2025-005'),\n    (10009, 9, 'FOOD-2025-005'),\n    (10010, 12, 'FOOD-2025-005');\n\n--- 3. artist table\nINSERT INTO artist (artist_id, name, genre) \nVALUES \n    (1, 'Burna Boy', 'afrobeat'),\n    (2, 'Tems', 'afropop'),\n    (3, 'Amaarae', 'afropop'),\n    (4, 'Dexta Daps', 'reggae'),\n    (5, 'Uncle Waffles', 'amapiano'),\n    (6, 'Scorpion kings', 'amapiano'),\n    (7, 'Felo le tee', 'francophone'),\n    (8, 'The therapist', 'afrojazz'),\n    (9, 'Dj maphorisa', 'amapiano'),\n    (10, 'Dj grauchi', 'afrohouse');\n\n--- 4. employees table\nINSERT INTO employee (employee_id, stage_id, name, job_type) \nVALUES  \n    (1, 1, 'Lida Scay', 'Stage Manager'),  \n    (2, 2, 'Benjy Scuttel', 'Vendor coordinator'),  \n    (3, 3, 'Sofie Itshack', 'Medical'),    \n    (4, 4, 'Brian Peckam', 'Ticketing'),     \n    (5, 5, 'Hilary Cuttel', 'Security'),\n    (6, 1, 'Page Waterworth', 'Information desk'),\n    (7, 2, 'Alehandro Gustavo', 'Medical'),\n    (8, 3, 'Fidel Castro', 'Security'),\n    (9, 4, 'Bruno Patrice', 'Stage manager'),\n    (10, 5, 'Anitta Maxwin', 'Ticketing');\n\n--- 5. ticket table\nINSERT INTO ticket (ticket_id, type) \nVALUES \n    (101, 'VIP'),\n    (102,  'General');\n\n--- 6. visitor table\nINSERT INTO visitor (visitor_id, ticket_id, name) \nVALUES \n    (1001, 101, 'Gauthier Janko'),\n    (1002, 102,  'Seamus Ashford'),\n    (1003, 101,  'Gale Carsey'),\n    (1004, 102,  'Lynette Fahy'),\n    (1005, 101,  'Jamie Knudsen'),\n    (1006, 102,  'Sada Brittin'),\n    (1007, 101,  'Lucianno Epp'),\n    (1008, 102,  'Kiah Krishna'),\n    (1009, 101,  'Theo Olatunji'),\n    (1010, 102,  'Barry Allen');\n\n--- 7. vistor balance table\nINSERT INTO balance (balance_id, visitor_id, balance) \nVALUES \n    (1, 1001, 99.14),  \n    (2, 1002, 85.55),  \n    (3, 1003, 28.41),  \n    (4, 1004, 50.59),  \n    (5, 1005, 11.60),\n    (6, 1006, 5.69),\n    (7, 1007, 105.42),\n    (8, 1008, 68.65),\n    (9, 1009, 70.36),\n    (10, 1010, 1.38);\n\n--- 8. purchase table\nINSERT INTO purchase (purchase_id, visitor_id, booth_id, amount) \nVALUES  \n    (1101, 1001, 1, 65.00),  \n    (1102, 1002, 2, 7.50),  \n    (1103, 1003, 3, 20.00),    \n    (1104, 1004, 4, 5.25),     \n    (1105, 1005, 5, 83.25),\n    (1106, 1006, 6, 64.67),\n    (1107, 1007, 7, 9.88),\n    (1108, 1008, 8, 89.11),\n    (1109, 1009, 9, 56.79),\n    (11010, 1005, 10, 15.00); \n\n\n\n\nRole-based access was implemented\nFor database security, different roles were created for festival employees and visitors providing different levels of access. Each role has specific permissions granted based on their responsibilities. The roles included:\n\nVisitor: Limited access to personal data and location tables only to view.\nStage Manager: full access to events table and limited access to stage and artist.\nVendor Coordinator: full access to vendor table and limited access to purchase and booth data.\nTicketing staff: limited access to ticket and visitor table\nSecurity staff: limited access to stage, artist and events tables\n\n\n--- Access control\n--- create roles for individuals to access database \nCREATE ROLE visitor WITH LOGIN PASSWORD 'ticket_id' VALID UNTIL '2025-07-11';\nCREATE ROLE stage_manager WITH LOGIN PASSWORD 'M4u=ct)HB8Em';\nCREATE ROLE vendor_coordinator WITH LOGIN PASSWORD 'u+}zmEn-P8`?sb';\nCREATE ROLE ticketing_staff WITH LOGIN PASSWORD 'e2H-mtS+Fs(q' VALID UNTIL '2025-07-11';\nCREATE ROLE security_staff WITH LOGIN PASSWORD 'ZL~hB+.E5GJ9/' VALID UNTIL '2025-07-11';\n\n---  visitor access  \nGRANT SELECT ON \n    festival, zones, stage,events, artist, vendor, booth, utility \nTO visitor;\n\n--- stage manager access\nGRANT SELECT, INSERT, UPDATE, DELETE ON events TO stage_manager;\nGRANT SELECT ON artist, stage TO stage_manager;\n\n--- vendor coordinator\nGRANT SELECT, INSERT, UPDATE, DELETE ON vendor TO vendor_coordinator;\nGRANT SELECT ON \n    purchase, balance \nTO vendor_coordinator;\n\n--- ticketing staff access\nGRANT SELECT ON \n    visitor, ticket \nTO ticketing_staff;\n\n--- security staff access\nGRANT SELECT ON \n    events, artist , stage \nTO security_staff;\n\n\n\n\nDatabase Query examples:\n\nList of events on the second day of festival. What are the events that are taking place on the second day of the festival including which stage and artists will perform?\nWhat are the utilities near a festival goer? Assumption for this query is that the location if the festival goer is from a specific zone, ideally it should be real time location of visitor.\nIdentify access level visitor has based on ticket type.Which stages / events does a festival have access to? Example below is with one festival goer\n\n\n--- Database Manipulation \n--- 1. list of events plus artist and stage they perform at on a specific date i.e.  2nd day of the festival\nSELECT  \n    e.date, \n    e.start_time, \n    e.end_time, \n    s.name AS stage_name, \n    a.name AS artist_name\nFROM events e\nJOIN stage s ON e.stage_id = s.stage_id\nJOIN artist a ON e.artist_id = a.artist_id\nWHERE e.date = '2025-07-10';\n\n--- 2. utilities near visitor location\nSELECT  \n    u.type AS utility_type, \n    u.status AS status,\n    u.number AS num_utility,\n    ST_Distance(\n        (SELECT ST_Centroid(z.geom) FROM zones z WHERE z.zone_id = 12),  \n        u.geom\n    ) AS distance_m,\n    u.geom\nFROM utility u\nWHERE ST_DWithin(\n    (SELECT ST_Centroid(z.geom) FROM zones z WHERE z.zone_id = 12),  \n    u.geom, 100  -- Distance within 100 meters\n);\n\n--- 3. Identifying user access in specific stages and events\nSELECT   \n    a.name AS artist_name,\n    e.date, \n    e.start_time, \n    e.end_time, \n    s.name AS stage_name\nFROM events e\nJOIN stage s ON e.stage_id = s.stage_id\nJOIN artist a ON e.artist_id = a.artist_id\nJOIN visitor v ON v.visitor_id = 1002  \nWHERE s.access_level = (SELECT type FROM ticket WHERE ticket_id = v.ticket_id)  \n;\n\nResults:\n\n\n\nQuery 1 result\n\n\n\n\n\nQuery 2 result\n\n\n\n\n\nQuery 3 result for general admission ticket holder\n\n\n\n\n\nQuery 3 result for a VIP ticket holder"
  },
  {
    "objectID": "projects/Spatial databases/spatial_databases.html#introduction",
    "href": "projects/Spatial databases/spatial_databases.html#introduction",
    "title": "Design and Implementation of a Spatial Database",
    "section": "",
    "text": "As part of a fictional project for Vudstork Entertainment Ltd, the task was to develop a WebGIS backend to support a mobile app for a city festival. The app provides festival visitors with real-time information and allows organizers to distribute notifications and streamline their workflows. My role involved leveraging my Geoinformatics expertise to design and implement a spatial database, which forms the core of the app’s functionality, integrating various methods and software techniques learned during the semester.\nRequirements\n\nServe as database backend to organise the booths, roller coasters, tents etc. (Positions, opening times) as well as other facilities (garbage bins, toilets etc)\nUser-specific, dynamic queries that return which events take place or facilities that are close to the current visitor’s position.\nUser-specific and dynamic queries about the festival (digital maps, lists of events etc\n\n\n\nThe ER diagram illustrates the main entities in the database design and their relationships.\n\nBelow is a summary of all tables\n\nFestival – Central entity that links all other tables, storing details about the festival’s name, location, and dates.\nEvent Zones – Defines areas within the festival (e.g., food, medical, event zones), linking to stages, booths, and utilities.\nStage – Stores details of festival stages, defining location, access level, and zone affiliation.\nEvent – Links artists to stages, recording performance time slots and locations.\nArtist – Stores artist details, linked to events and stages.\nBooth – Represents vendor booths, specifying type, location, and zone.\nVendor – Links vendors to booths.\nUtility – Stores details about facilities (e.g., toilets, medical points, garbage bins), linked to zones and festival areas.\nEmployees – Stores festival staff information, linking them to stages and assigned roles.\nVisitor – Tracks festival attendees, linking them to ticket types.\nVisitor Balance – Monitors a visitor’s remaining balance on their digital festival band.\nTicket – Stores ticket types (VIP, General Admission), defining visitor access levels.\nPurchase – Tracks visitor purchases at booths, recording transaction amounts.\n\n\n\n\nSpatial tables including utilities, booths, stages, zones and the festival grounds, were created using QGIS and the shapefiles were then imported into a PostGIS database.\n\nNon-spatial tables were defined in Postgres including events, artists, visitors employees , tickets etc .\n\n--- non spatial tables\n--- event table\nCREATE TABLE events (\n    event_id INTEGER PRIMARY KEY,\n    stage_id INTEGER ,\n    artist_id INTEGER ,\n    date DATE,\n    start_time TIME WITHOUT TIME ZONE,\n    end_time TIME WITHOUT TIME ZONE,\n    FOREIGN KEY (stage_id) REFERENCES stage(stage_id),\n    FOREIGN KEY (artist_id) REFERENCES artist(artist_id)\n);\n\n--- vendor table\nCREATE TABLE vendor (\n    vendor_id INTEGER PRIMARY KEY,\n    booth_id INTEGER,\n    licence CHARACTER VARYING,\n    FOREIGN KEY (booth_id) REFERENCES booth(booth_id)\n);\n\n--- artist table\nCREATE TABLE artist (\n    artist_id INTEGER PRIMARY KEY,\n    name CHARACTER VARYING,\n    genre CHARACTER VARYING\n);\n\n--- employees table\nCREATE TABLE employee (\n    employee_id INTEGER PRIMARY KEY,\n    stage_id INTEGER,\n    name CHARACTER VARYING,\n    job_type CHARACTER VARYING,\n    FOREIGN KEY (stage_id) REFERENCES stage(stage_id)\n);\n\n--- visitor table\nCREATE TABLE visitor (\n    visitor_id INTEGER PRIMARY KEY,\n    ticket_id INTEGER,\n    name CHARACTER VARYING,\n    FOREIGN KEY (ticket_id) REFERENCES ticket(ticket_id)\n);\n\n--- vistor balance table\nCREATE TABLE balance (\n    balance_id INTEGER PRIMARY KEY,\n    visitor_id INTEGER ,\n    balance FLOAT,\n    FOREIGN KEY (visitor_id) REFERENCES visitor(visitor_id)\n);\n\n--- ticket table\nCREATE TABLE ticket (\n    ticket_id INTEGER PRIMARY KEY,\n    type CHARACTER VARYING CHECK (type IN ('VIP','General'))\n);\n\n--- purchase table\nCREATE TABLE purchase (\n    purchase_id INTEGER PRIMARY KEY,\n    visitor_id INTEGER ,\n    booth_id INTEGER ,\n    amount FLOAT,\n    FOREIGN KEY (visitor_id) REFERENCES visitor(visitor_id),\n    FOREIGN KEY (booth_id) REFERENCES booth(booth_id)\n);\n\nThe database is normalized to Third Normal Form (3NF) to eliminate redundancy by having each table has a primary key that uniquely identifies records and all other attributes dependent on the full primary key and not the other non-primary keys.\nPseudo sample data was then inserted into the database for the corresponding tables.\n\n--- Adding sample data to the table\n--- 1. event table\nINSERT INTO events (event_id, stage_id, artist_id, date, start_time, end_time) \nVALUES\n    (1, 1, 1, '2025-07-09', '18:00', '19:30'), \n    (2, 1, 2, '2025-07-10', '20:00', '21:30'),  \n    (3, 2, 3, '2025-07-09', '17:00', '18:30'),  \n    (4, 2, 4, '2025-07-10', '19:00', '20:30'),  \n    (5, 3, 5, '2025-07-09', '18:00', '19:30'),  \n    (6, 3, 6, '2025-07-10', '20:00', '21:30'), \n    (7, 4, 7, '2025-07-09', '17:00', '18:30'),  \n    (8, 4, 8, '2025-07-10', '19:00', '20:30'),  \n    (9, 5, 9, '2025-07-09', '18:00', '19:30'),  \n    (10, 5, 10, '2025-07-10', '20:00', '21:30');\n\n--- 2. vendor table\nINSERT INTO vendor (vendor_id, booth_id, licence) \nVALUES \n    (10001, 1, 'FOOD-2025-001'),  \n    (10002, 2, 'MERCH-2025-002'),  \n    (10003, 10, 'GAMES-2025-003'),  \n    (10004, 6, 'FOOD-2025-004'),  \n    (10005, 3, 'MERCH-2025-005'),\n    (10006, 11, 'GAMES-2025-005'),\n    (10007, 7, 'FOOD-2025-005'),\n    (10008, 4, 'MERCH-2025-005'),\n    (10009, 9, 'FOOD-2025-005'),\n    (10010, 12, 'FOOD-2025-005');\n\n--- 3. artist table\nINSERT INTO artist (artist_id, name, genre) \nVALUES \n    (1, 'Burna Boy', 'afrobeat'),\n    (2, 'Tems', 'afropop'),\n    (3, 'Amaarae', 'afropop'),\n    (4, 'Dexta Daps', 'reggae'),\n    (5, 'Uncle Waffles', 'amapiano'),\n    (6, 'Scorpion kings', 'amapiano'),\n    (7, 'Felo le tee', 'francophone'),\n    (8, 'The therapist', 'afrojazz'),\n    (9, 'Dj maphorisa', 'amapiano'),\n    (10, 'Dj grauchi', 'afrohouse');\n\n--- 4. employees table\nINSERT INTO employee (employee_id, stage_id, name, job_type) \nVALUES  \n    (1, 1, 'Lida Scay', 'Stage Manager'),  \n    (2, 2, 'Benjy Scuttel', 'Vendor coordinator'),  \n    (3, 3, 'Sofie Itshack', 'Medical'),    \n    (4, 4, 'Brian Peckam', 'Ticketing'),     \n    (5, 5, 'Hilary Cuttel', 'Security'),\n    (6, 1, 'Page Waterworth', 'Information desk'),\n    (7, 2, 'Alehandro Gustavo', 'Medical'),\n    (8, 3, 'Fidel Castro', 'Security'),\n    (9, 4, 'Bruno Patrice', 'Stage manager'),\n    (10, 5, 'Anitta Maxwin', 'Ticketing');\n\n--- 5. ticket table\nINSERT INTO ticket (ticket_id, type) \nVALUES \n    (101, 'VIP'),\n    (102,  'General');\n\n--- 6. visitor table\nINSERT INTO visitor (visitor_id, ticket_id, name) \nVALUES \n    (1001, 101, 'Gauthier Janko'),\n    (1002, 102,  'Seamus Ashford'),\n    (1003, 101,  'Gale Carsey'),\n    (1004, 102,  'Lynette Fahy'),\n    (1005, 101,  'Jamie Knudsen'),\n    (1006, 102,  'Sada Brittin'),\n    (1007, 101,  'Lucianno Epp'),\n    (1008, 102,  'Kiah Krishna'),\n    (1009, 101,  'Theo Olatunji'),\n    (1010, 102,  'Barry Allen');\n\n--- 7. vistor balance table\nINSERT INTO balance (balance_id, visitor_id, balance) \nVALUES \n    (1, 1001, 99.14),  \n    (2, 1002, 85.55),  \n    (3, 1003, 28.41),  \n    (4, 1004, 50.59),  \n    (5, 1005, 11.60),\n    (6, 1006, 5.69),\n    (7, 1007, 105.42),\n    (8, 1008, 68.65),\n    (9, 1009, 70.36),\n    (10, 1010, 1.38);\n\n--- 8. purchase table\nINSERT INTO purchase (purchase_id, visitor_id, booth_id, amount) \nVALUES  \n    (1101, 1001, 1, 65.00),  \n    (1102, 1002, 2, 7.50),  \n    (1103, 1003, 3, 20.00),    \n    (1104, 1004, 4, 5.25),     \n    (1105, 1005, 5, 83.25),\n    (1106, 1006, 6, 64.67),\n    (1107, 1007, 7, 9.88),\n    (1108, 1008, 8, 89.11),\n    (1109, 1009, 9, 56.79),\n    (11010, 1005, 10, 15.00); \n\n\n\n\nRole-based access was implemented\nFor database security, different roles were created for festival employees and visitors providing different levels of access. Each role has specific permissions granted based on their responsibilities. The roles included:\n\nVisitor: Limited access to personal data and location tables only to view.\nStage Manager: full access to events table and limited access to stage and artist.\nVendor Coordinator: full access to vendor table and limited access to purchase and booth data.\nTicketing staff: limited access to ticket and visitor table\nSecurity staff: limited access to stage, artist and events tables\n\n\n--- Access control\n--- create roles for individuals to access database \nCREATE ROLE visitor WITH LOGIN PASSWORD 'ticket_id' VALID UNTIL '2025-07-11';\nCREATE ROLE stage_manager WITH LOGIN PASSWORD 'M4u=ct)HB8Em';\nCREATE ROLE vendor_coordinator WITH LOGIN PASSWORD 'u+}zmEn-P8`?sb';\nCREATE ROLE ticketing_staff WITH LOGIN PASSWORD 'e2H-mtS+Fs(q' VALID UNTIL '2025-07-11';\nCREATE ROLE security_staff WITH LOGIN PASSWORD 'ZL~hB+.E5GJ9/' VALID UNTIL '2025-07-11';\n\n---  visitor access  \nGRANT SELECT ON \n    festival, zones, stage,events, artist, vendor, booth, utility \nTO visitor;\n\n--- stage manager access\nGRANT SELECT, INSERT, UPDATE, DELETE ON events TO stage_manager;\nGRANT SELECT ON artist, stage TO stage_manager;\n\n--- vendor coordinator\nGRANT SELECT, INSERT, UPDATE, DELETE ON vendor TO vendor_coordinator;\nGRANT SELECT ON \n    purchase, balance \nTO vendor_coordinator;\n\n--- ticketing staff access\nGRANT SELECT ON \n    visitor, ticket \nTO ticketing_staff;\n\n--- security staff access\nGRANT SELECT ON \n    events, artist , stage \nTO security_staff;\n\n\n\n\nDatabase Query examples:\n\nList of events on the second day of festival. What are the events that are taking place on the second day of the festival including which stage and artists will perform?\nWhat are the utilities near a festival goer? Assumption for this query is that the location if the festival goer is from a specific zone, ideally it should be real time location of visitor.\nIdentify access level visitor has based on ticket type.Which stages / events does a festival have access to? Example below is with one festival goer\n\n\n--- Database Manipulation \n--- 1. list of events plus artist and stage they perform at on a specific date i.e.  2nd day of the festival\nSELECT  \n    e.date, \n    e.start_time, \n    e.end_time, \n    s.name AS stage_name, \n    a.name AS artist_name\nFROM events e\nJOIN stage s ON e.stage_id = s.stage_id\nJOIN artist a ON e.artist_id = a.artist_id\nWHERE e.date = '2025-07-10';\n\n--- 2. utilities near visitor location\nSELECT  \n    u.type AS utility_type, \n    u.status AS status,\n    u.number AS num_utility,\n    ST_Distance(\n        (SELECT ST_Centroid(z.geom) FROM zones z WHERE z.zone_id = 12),  \n        u.geom\n    ) AS distance_m,\n    u.geom\nFROM utility u\nWHERE ST_DWithin(\n    (SELECT ST_Centroid(z.geom) FROM zones z WHERE z.zone_id = 12),  \n    u.geom, 100  -- Distance within 100 meters\n);\n\n--- 3. Identifying user access in specific stages and events\nSELECT   \n    a.name AS artist_name,\n    e.date, \n    e.start_time, \n    e.end_time, \n    s.name AS stage_name\nFROM events e\nJOIN stage s ON e.stage_id = s.stage_id\nJOIN artist a ON e.artist_id = a.artist_id\nJOIN visitor v ON v.visitor_id = 1002  \nWHERE s.access_level = (SELECT type FROM ticket WHERE ticket_id = v.ticket_id)  \n;\n\nResults:\n\n\n\nQuery 1 result\n\n\n\n\n\nQuery 2 result\n\n\n\n\n\nQuery 3 result for general admission ticket holder\n\n\n\n\n\nQuery 3 result for a VIP ticket holder"
  },
  {
    "objectID": "projects/Remote sensing/classification.html",
    "href": "projects/Remote sensing/classification.html",
    "title": "Image segmentation and Classification",
    "section": "",
    "text": "The project consists of conducting a supervised and knowledge-based land cover classification of a sample of satellite imagery. An object-based image analysis (OBIA) approach is used in the initial steps, applying spectral and spatial attributes to segment and classify the land cover using eCognition.\nStudy Area and Data\nKelleys Island, located in the United States, serves as the study area for this analysis. The datasets used include:\n\nPlanet Dove Satellite Image (3m resolution, 4 bands: Blue, Green, Red, Near-Infrared), providing detailed spectral information for classification.\nFlood Zone Raster (3m resolution, binary values: 1 = potential flood zone, 0 = no flood zone), used for knowledge-based classification to refine land cover identification."
  },
  {
    "objectID": "projects/Remote sensing/classification.html#introduction",
    "href": "projects/Remote sensing/classification.html#introduction",
    "title": "Image segmentation and Classification",
    "section": "",
    "text": "The project consists of conducting a supervised and knowledge-based land cover classification of a sample of satellite imagery. An object-based image analysis (OBIA) approach is used in the initial steps, applying spectral and spatial attributes to segment and classify the land cover using eCognition.\nStudy Area and Data\nKelleys Island, located in the United States, serves as the study area for this analysis. The datasets used include:\n\nPlanet Dove Satellite Image (3m resolution, 4 bands: Blue, Green, Red, Near-Infrared), providing detailed spectral information for classification.\nFlood Zone Raster (3m resolution, binary values: 1 = potential flood zone, 0 = no flood zone), used for knowledge-based classification to refine land cover identification."
  },
  {
    "objectID": "projects/Remote sensing/classification.html#supervised-classification",
    "href": "projects/Remote sensing/classification.html#supervised-classification",
    "title": "Image segmentation and Classification",
    "section": "Supervised Classification",
    "text": "Supervised Classification\n\nImage segmentation\nWhy Image Segmentation? Segmentation is required for clustering pixels into significant objects in order to facilitate a more structured classification process. Segmentation considers spatial context, unlike pixel-based classification, and is therefore particularly useful for delineating complex land cover types.\nTo produce meaningful image objects, a Multiresolution Segmentation algorithm within eCogniton was employed. A scale parameter of 150 was set such that resulting segments are not too small nor too large, finding a compromise between detail preservation and efficiency in classification. This segmentation was key in distinguishing between land cover classes, dividing the image/scene into objects based on their spectral value, shape and compactness.\n\n\n\nmultiresolution segmentation\n\n\n\n\nSample-based Image classification\nWhy Sample-Based Classification? Supervised classification applies training data to develop a model that can generalize to unseen areas. By selecting representative samples, we ensure the classification model is able to separate land cover categories effectively.\nA supervised classification method was utilized, and a selection of representative samples for the major land cover categories were needed:Water, Grassland, Forest, Bare Soil, and Impervious Surfaces (streets, buildings, etc.)\nThe classification used mean spectral values from the image bands to separate classes. Training was done using a Support Vector Machine (SVM), iteratively refining the classification by adjusting training samples and re-running the classification.\n\n\n\nsupervised classification"
  },
  {
    "objectID": "projects/Remote sensing/classification.html#knowledge-based-classification",
    "href": "projects/Remote sensing/classification.html#knowledge-based-classification",
    "title": "Image segmentation and Classification",
    "section": "Knowledge-Based Classification",
    "text": "Knowledge-Based Classification\nWhy Knowledge-Based Classification? Supervised classification incorrectly classifies some regions and provides only a broad classification. Knowledge-based classification applies expert rules and other data sources to limit the results, hence improving overall accuracy.\nWhereas the first classification provided a general class of land cover, expert knowledge was incorporated to provide more detail results. Two new classes were incorporated:\n\nForest_Flooded: Areas classified as forest that overlap with flood-prone zones.\nLake: A subclass of water, distinguishing inland water bodies from surrounding waters.\n\n\nApplying Expert Rules\nThe Assign Class algorithm was used to identify and classify Forest_Flooded areas. This rule-based classification ensured that any forest object intersecting flood-prone zones (value = 1 in the flood zone raster) was correctly labeled.\n\n\n\nassign class algorithm\n\n\nSimilarly, in order to classify Lake areas correctly, the Find Enclosed by Class algorithm was used. The algorithm could successfully find inland water bodies based on geometric properties, which ensured water bodies within the island were well classified.\n\n\n\nfind enclosed by class algorihtm\n\n\n\n\nPost-Processing\nTo further improve results, the Merge Region algorithm was used to combine fragmented water objects into one object, ensuring precise representation of the lake class.\n\n\n\nmerge by region algorithm\n\n\nThe final knowledge-based classification incorporated these enhancements, yielding a better land cover representation.\n\n\n\nknowledge based classification result"
  },
  {
    "objectID": "projects/Remote sensing/classification.html#high-level-segmentation",
    "href": "projects/Remote sensing/classification.html#high-level-segmentation",
    "title": "Image segmentation and Classification",
    "section": "High-Level Segmentation",
    "text": "High-Level Segmentation\nWhy High-Level Segmentation? High-level segmentation allows for analysis at a broader scale, grouping larger regions to gain insights into overall land cover patterns.\nTo further analyze the island at a broader level, a new segmentation level was introduced. The goal was to segment the entire island as a single object, allowing for higher-level classification and analysis.\nCoarse-Level Segmentation\nA second segmentation was also performed using only the spectral bands, increasing the scale parameter significantly to encompass the entire island as a single object. Several iterations were performed to fine-tune the scale so that the island would be segmented as a single unit without fragmentation.\n\nThe result successfully separated the island as a single object, demonstrating how various scales of segmentation can be used for various analysis purposes."
  },
  {
    "objectID": "projects/Remote sensing/classification.html#conclusion",
    "href": "projects/Remote sensing/classification.html#conclusion",
    "title": "Image segmentation and Classification",
    "section": "Conclusion",
    "text": "Conclusion\nThis project applied a systematic process to land cover classification, combining supervised and knowledge-based methods to eCognition. The processing methodology emphasized segmentation, feature selection, and interactive optimization as a critical component to providing useful classification. Adding knowledge enhanced the following classification even further, with more accurate and insightful land cover for Kelleys Island. High-level segmentation with resulting maps provided the analysis with a macro level, with possibilities of larger regional analysis as well as ongoing spatial assessment."
  },
  {
    "objectID": "projects/OBIA/OBIA.html",
    "href": "projects/OBIA/OBIA.html",
    "title": "Object Based Image Analysis",
    "section": "",
    "text": "xoaofsadsjföäösldkfä\nÖDJFMÖjdfö"
  }
]